name: Build and Push Docker Image

on:
  push:
    tags: [ '*' ]

env:
  REGISTRY: registry.trackit.systems

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Harbor Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.HARBOR_ROBOT_USER }}
        password: ${{ secrets.HARBOR_ROBOT_TOKEN }}

    - name: Get tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Set image tags
      id: image
      run: |
        echo "tag_name=${{ env.REGISTRY }}/backend/${{ github.event.repository.name }}:${{ steps.tag.outputs.tag }}" >> $GITHUB_OUTPUT
        echo "latest_name=${{ env.REGISTRY }}/backend/${{ github.event.repository.name }}:latest" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: |
          ${{ steps.image.outputs.tag_name }}
          ${{ steps.image.outputs.latest_name }}
        labels: |
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.version=${{ steps.tag.outputs.tag }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1
          SONARI_FOLDER=${{ vars.SONARI_FOLDER || '/sonari' }}
        provenance: false
        sbom: false

    - name: Output image details
      run: |
        echo "Images pushed to:"
        echo "  - ${{ steps.image.outputs.tag_name }}"
        echo "  - ${{ steps.image.outputs.latest_name }}"
        echo "Image digest: ${{ steps.build.outputs.digest }}"
        echo "Git tag used: ${{ steps.tag.outputs.tag }}"